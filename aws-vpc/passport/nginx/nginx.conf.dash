map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
}

upstream backend {
	server 10.0.22.36:6060;
}

server {

       listen 443;
       server_name *.{{inline "env:///{{.Domain}}/{{.Service}}/env/DOMAIN"}};

       # Turn off server information in response headers - Per security audit recommendation.
       server_tokens off;

       ssl on;
       ssl_certificate {{file "env:///code.qor.io/ssl/qor.io.cert" "/etc/nginx/"}};
       ssl_certificate_key {{file "env:///code.qor.io/ssl/qor.io.key" "/etc/nginx"}};

       # Turn off SSLv3 - Per security audit recommendation.
       ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
       ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
       ssl_prefer_server_ciphers on;

       root /var/www/blinker/public;
       try_files $uri/index.html $uri @backend;

       location @backend {

	     add_header 'X-Fe-Conf' 'v1.0';

             # Support for CORS
	     # OPTIONS indicates a CORS pre-flight request
	     if ($request_method = 'OPTIONS') {
	       add_header 'Access-Control-Allow-Origin' "*" always;
	       add_header 'Access-Control-Allow-Credentials' 'true' always;
	       add_header 'Access-Control-Allow-Methods' 'HEAD, GET, POST, PUT, PATCH, OPTIONS, DELETE' always;
	       add_header 'Access-Control-Allow-Headers'  'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Dash-Version,X-Fe-Conf' always;
	       add_header 'Access-Control-Expose-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Dash-Version,X-Fe-Conf' always;
	       add_header 'Access-Control-Max-Age' 1728000 always;
	       add_header 'Content-Length' 0;
	       add_header 'Content-Type' 'text/plain charset=UTF-8';
	       return 204;
	     }
	     # non-OPTIONS indicates a normal CORS request
	     if ($request_method = 'HEAD') {
	       add_header 'Access-Control-Allow-Origin' "*" always;
	       add_header 'Access-Control-Allow-Credentials' 'true' always;
	       add_header 'Access-Control-Allow-Methods' 'HEAD, GET, POST, PUT, PATCH, OPTIONS, DELETE' always;
	       add_header 'Access-Control-Allow-Headers'  'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Dash-Version,X-Fe-Conf' always;
	       add_header 'Access-Control-Expose-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Dash-Version,X-Fe-Conf' always;
	       add_header 'Access-Control-Max-Age' 1728000 always;
	     }
	     if ($request_method = 'GET') {
	       add_header 'Access-Control-Allow-Origin' "*" always;
	       add_header 'Access-Control-Allow-Credentials' 'true' always;
	       add_header 'Access-Control-Allow-Methods' 'HEAD, GET, POST, PUT, PATCH, OPTIONS, DELETE' always;
	       add_header 'Access-Control-Allow-Headers'  'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Dash-Version,X-Fe-Conf' always;
	       add_header 'Access-Control-Expose-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Dash-Version,X-Fe-Conf' always;
	       add_header 'Access-Control-Max-Age' 1728000 always;
	       # Headers to disable client side caching
	       add_header 'Cache-Control' 'no-cache, no-store, must-revalidate' always;
	       add_header 'Pragma' 'no-cache' always;
	       add_header 'Expires' '0' always;
	     }
	     if ($request_method = 'POST') {
	       add_header 'Access-Control-Allow-Origin' "*" always;
	       add_header 'Access-Control-Allow-Credentials' 'true' always;
	       add_header 'Access-Control-Allow-Methods' 'HEAD, GET, POST, PUT, PATCH, OPTIONS, DELETE' always;
	       add_header 'Access-Control-Allow-Headers'  'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Dash-Version,X-Fe-Conf' always;
	       add_header 'Access-Control-Expose-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Dash-Version,X-Fe-Conf' always;
	       add_header 'Access-Control-Max-Age' 1728000 always;
	     }
	     if ($request_method = 'PUT') {
	       add_header 'Access-Control-Allow-Origin' "*" always;
	       add_header 'Access-Control-Allow-Credentials' 'true' always;
	       add_header 'Access-Control-Allow-Methods' 'HEAD, GET, POST, PUT, PATCH, OPTIONS, DELETE' always;
	       add_header 'Access-Control-Allow-Headers'  'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Dash-Version,X-Fe-Conf' always;
	       add_header 'Access-Control-Expose-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Dash-Version,X-Fe-Conf' always;
	       add_header 'Access-Control-Max-Age' 1728000 always;
	     }
	     if ($request_method = 'PATCH') {
	       add_header 'Access-Control-Allow-Origin' "*" always;
	       add_header 'Access-Control-Allow-Credentials' 'true' always;
	       add_header 'Access-Control-Allow-Methods' 'HEAD, GET, POST, PUT, PATCH, OPTIONS, DELETE' always;
	       add_header 'Access-Control-Allow-Headers'  'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Dash-Version,X-Fe-Conf' always;
	       add_header 'Access-Control-Expose-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Dash-Version,X-Fe-Conf' always;
	       add_header 'Access-Control-Max-Age' 1728000 always;
	     }
	     if ($request_method = 'DELETE') {
	       add_header 'Access-Control-Allow-Origin' "*" always;
	       add_header 'Access-Control-Allow-Credentials' 'true' always;
	       add_header 'Access-Control-Allow-Methods' 'HEAD, GET, POST, PUT, PATCH, OPTIONS, DELETE' always;
	       add_header 'Access-Control-Allow-Headers'  'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Dash-Version,X-Fe-Conf' always;
	       add_header 'Access-Control-Expose-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Dash-Version,X-Fe-Conf' always;
	       add_header 'Access-Control-Max-Age' 1728000 always;
	     }
	     
	     proxy_pass http://backend;
             proxy_redirect off;
             proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
             proxy_connect_timeout 2;
             proxy_read_timeout 30;

	     add_header X-Upstream $upstream_addr;

	     proxy_set_header Host $http_host;
	     proxy_set_header X-Real-IP $remote_addr;
	     proxy_set_header Client-IP $remote_addr;
	     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	     proxy_set_header X-Forwarded-Protocol $scheme;

             # websocket
       	     proxy_http_version 1.1;
       	     proxy_set_header Upgrade $http_upgrade;
       	     proxy_set_header Connection $connection_upgrade;

	     # For HTTP SSE / EventSource prototcol
	     chunked_transfer_encoding off;
             proxy_buffering off;
             proxy_cache off;
	 }
		 
	 client_max_body_size 1G;
	 keepalive_timeout 10;

	 error_page 403 404 /error.html;
	 error_page 500 502 503 504 /error.html;
	 location /error.html {
	 	  internal;
		  root /etc/nginx/html;
	}

	 # websocket
 	 location /ws/ {
              proxy_pass http://backend;
       	      proxy_http_version 1.1;
       	      proxy_set_header Upgrade $http_upgrade;
       	      proxy_set_header Connection $connection_upgrade;
       	 }
}
